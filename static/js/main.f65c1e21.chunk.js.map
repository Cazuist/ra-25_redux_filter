{"version":3,"sources":["actions/actionTypes.js","actions/ActionCreators.js","components/ServiceAdd.js","components/ServiceList.js","App.js","reducers/serviceAddReducer.js","reducers/serviceListReducer.js","store/index.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","CHANGE_SERVICE_FIELD","EDIT_SERVICE","CLEAR_SERVICE_FIELD","CANCEL_EDIT","CLEAR_SEARCH","clearServiceField","type","ServiceAdd","item","useSelector","state","serviceAdd","item2","serviceList","dispatch","useDispatch","onFieldChange","e","target","name","value","payload","changeServiceField","onReset","preventDefault","className","htmlFor","id","onChange","filter","placeholder","trim","onClick","price","nanoid","addService","selected","ServiceList","filteredList","services","toLowerCase","includes","onServiceRemove","removeService","onServiceEdit","edited","find","s","editService","length","map","service","App","initialState","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f65c1e21.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\n","import {nanoid} from 'nanoid';\nimport { \n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  CHANGE_SERVICE_FIELD,\n  EDIT_SERVICE,\n  CLEAR_SERVICE_FIELD,\n  CANCEL_EDIT,\n  CLEAR_SEARCH,\n} from './actionTypes';\n\nexport function addService(name, price, id = nanoid()) {\n  return {type: ADD_SERVICE, payload: { name, price, id }};\n}\n\nexport function removeService(id) {\n  return {type: REMOVE_SERVICE, payload: {id}};\n}\n\nexport function changeServiceField(name, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {name, value}};\n}\n\nexport function editService(name, price, id) {\n  return {type: EDIT_SERVICE, payload: { name, price, id }};\n}\n\nexport function clearServiceField() {\n  return  {type: CLEAR_SERVICE_FIELD };\n}\n\nexport function cancelEdit() {\n  return  {type: CANCEL_EDIT };\n}\n\nexport function clearSearch() {\n  return  {type: CLEAR_SEARCH };\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { \n  changeServiceField,\n  addService,\n  clearServiceField,\n  cancelEdit,\n  clearSearch,\n} from '../actions/ActionCreators';\n\nexport default function ServiceAdd() {\n  const item = useSelector((state) => state.serviceAdd);\n  const item2 = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();  \n\n  const onFieldChange = (e) => {\n    const { name, value } = e.target;\n    dispatch(changeServiceField(name, value)); \n  }\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addService(item.name, item.price));\n    dispatch(clearServiceField());\n  }\n\n  const onFormReset = (e) => {\n    e.preventDefault();\n    dispatch(clearServiceField());\n  }\n\n  const onEditCancel = (e) => {\n    dispatch(cancelEdit());\n    dispatch(clearServiceField());\n  }\n\n  const onClearSearch = (e) => {\n    dispatch(clearSearch());\n  }\n\n  return (\n    <form onReset={onFormReset}>\n      <div className='input_row search_row'>\n        <label htmlFor=\"filter\">\n          <span className='material-icons'>search</span>\n        </label>        \n        <input name=\"filter\" id=\"filter\"\n          onChange={onFieldChange}\n          value={item.filter}\n          placeholder='Searsh service'/>\n          <span className={`material-icons clear${!item.filter.trim() ? ' inactive' : ''}`} \n            onClick={onClearSearch}>clear</span>\n      </div>\n\n      <div className='input_row'>\n        <label htmlFor=\"name\">Service:</label>\n        <input name=\"name\" id=\"name\"\n          onChange={onFieldChange} \n          value={item.name}\n          placeholder='Service name'/>\n      </div>\n\n      <div className='input_row'>\n        <label htmlFor=\"price\">Price:</label>\n        <input name=\"price\" id=\"price\"\n          type='number'\n          onChange={onFieldChange} \n          value={item.price}\n          placeholder='Service price'/>\n      </div>     \n\n      <div className=\"btn_row\">\n        <button type=\"submit\"\n          className={`form_btn${!item.name.trim() || !item.price.trim() ? ' inactive' : ''}`}\n          onClick={onFormSubmit}>Save</button>\n        <button type=\"reset\"\n          className={`form_btn${!item.name.trim() || !item.price.trim() ? ' inactive' : ''}`}\n          >Clear</button>\n\n        <button type=\"button\"\n          onClick={onEditCancel}\n          className={`form_btn${!item2.selected ? ' hidden' : ''}`}\n          >Cancel</button>\n      </div>\n    </form>\n  )\n}","import { useSelector, useDispatch } from 'react-redux';\nimport { \n  removeService,\n  editService,\n  clearServiceField,\n} from '../actions/ActionCreators';\n\nexport default function ServiceList() {\n  const item = useSelector((state) => state.serviceList);\n  const item2 = useSelector((state) => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  const filteredList = item.services.filter(({ name }) => {\n    return name.toLowerCase().includes(item2.filter.toLowerCase());\n  });\n\n  const onServiceRemove = (id) => {\n    dispatch(removeService(id));\n    if (id === item.selected) {\n      dispatch(clearServiceField());\n    }\n  }\n\n  const onServiceEdit = (id) => {\n    const edited = item.services.find((s) => s.id === id);\n    dispatch(editService(edited.name, \"\" + edited.price, id));\n  }\n\n  return (\n    <div className='list_container'>\n      <h3>Service List</h3>\n        {filteredList.length === 0 ? 'Нет сервисов' :\n        filteredList.map((service) => (\n          <div className='servise__list__row' key={service.id}>\n            <span className=\"row_name\">{service.name}</span>\n            <span className=\"row_price\">{service.price}</span>\n            <div className='btn_box'>\n              <button onClick={() => onServiceEdit(service.id)}>\n                <span className='material-icons'>edit</span>\n              </button>\n              <button onClick={() => onServiceRemove(service.id)}>\n                <span className='material-icons'>delete</span>\n              </button>\n            </div>            \n          </div>\n        ))}\n    </div>\n  )\n}","import './App.css';\n\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"task-title\">Filter</div>\n      <ServiceAdd />\n      <ServiceList />\n    </>\n  );\n}\n\nexport default App;\n","import { \n  CHANGE_SERVICE_FIELD,\n  CLEAR_SERVICE_FIELD,\n  EDIT_SERVICE,\n  CLEAR_SEARCH,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  name: '',\n  price: '',\n  filter: '',\n};\n\nexport default function serviceAddReducer(state = initialState, { type, payload }) {\n  switch(type) {\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = payload;\n      return {...state, [name]: value};\n    \n    case CLEAR_SERVICE_FIELD:\n      return {...state, name: '', price: ''};\n\n    case EDIT_SERVICE:\n      return {...state, name: payload.name, price: payload.price};\n\n    case CLEAR_SEARCH:\n      return {...state, filter: ''};\n    \n    default:\n      return state;\n  }\n}","import {nanoid} from 'nanoid';\nimport {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  EDIT_SERVICE,\n  CANCEL_EDIT,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  selected: null,\n  services: [\n    { id: nanoid(), name: 'Замена стекла', price: 10000 },\n    { id: nanoid(), name: 'Установка ОС', price: 2000 },\n    { id: nanoid(), name: 'Замена питания', price: 4000 },\n    { id: nanoid(), name: 'Починка камеры', price: 5000 },\n    { id: nanoid(), name: 'Починка разъема', price: 3000 },\n  ]  \n};\n\nexport default function serviceListReducer(state = initialState, { type, payload }) {\n  switch(type) {\n    case ADD_SERVICE:\n      const { name, price } = payload;\n      if (!state.selected) {\n        return {\n          ...state,\n          services: [...state.services, { id: nanoid(), name, price: +price }]\n        };\n      }\n\n      return {\n        ...state,\n        selected: null,\n        services: state.services.map((s) => {\n          return s.id === state.selected ? {...s, name, price: +price} : {...s}\n        }),\n      };\n\n    case REMOVE_SERVICE:\n      return {\n        ...state, \n        selected: payload.id === state.selected ? null : state.selected,\n        services: state.services.filter((service) => service.id !== payload.id),\n      };\n\n    case EDIT_SERVICE: \n      return {...state, selected: payload.id};\n\n    case CANCEL_EDIT: \n      return {...state, selected: null};\n\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers } from 'redux';\n\nimport serviceAddReducer from '../reducers/serviceAddReducer';\nimport serviceListReducer from '../reducers/serviceListReducer';\n\nconst reducer = combineReducers({\n  serviceAdd: serviceAddReducer,\n  serviceList: serviceListReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}